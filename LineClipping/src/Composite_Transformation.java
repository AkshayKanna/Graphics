
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Shape;
import java.awt.geom.Point2D;
import java.util.ArrayList;
import java.util.List;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Akshay
 */
public class Composite_Transformation extends javax.swing.JFrame {

    /**
     * Creates new form Composite_Transformation
     */
     private Graphics2D g2DResult;
    private Graphics2D g2DObject;
    private Graphics gResult;
    private Graphics gObject;
    private List<Point2D> outerRect = new ArrayList();
    private List<Point2D> innerRect1 = new ArrayList();
    private List<Point2D> innerRect2 = new ArrayList();
    private List<Point2D> innerRect3 = new ArrayList();
    private List<Point2D> smallRect1 = new ArrayList();
    private List<Point2D> smallRect2 = new ArrayList();
    private List<Point2D> smallRect3 = new ArrayList();
    private List<Point2D> routerRect = new ArrayList();
    private List<Point2D> rinnerRect1 = new ArrayList();
    private List<Point2D> rinnerRect2 = new ArrayList();
    private List<Point2D> rinnerRect3 = new ArrayList();
    private List<Point2D> rsmallRect1 = new ArrayList();
    private List<Point2D> rsmallRect2 = new ArrayList();
    private List<Point2D> rsmallRect3 = new ArrayList();
    private List<Point2D> touterRect = new ArrayList();
    private List<Point2D> tinnerRect1 = new ArrayList();
    private List<Point2D> tinnerRect2 = new ArrayList();
    private List<Point2D> tinnerRect3 = new ArrayList();
    private List<Point2D> tsmallRect1 = new ArrayList();
    private List<Point2D> tsmallRect2 = new ArrayList();
    private List<Point2D> tsmallRect3 = new ArrayList();
    private List<Shape> shapes = new ArrayList();
    public Composite_Transformation() {
        initComponents();
        gObject = objectPanel.getGraphics();
        g2DObject = (Graphics2D)gObject;
        g2DObject.translate(388/2,268/2);
        g2DObject.scale(1,-1);
        gResult = resultPanel.getGraphics();
        g2DResult = (Graphics2D)gResult;
        g2DResult.translate(388/2,268/2);
        g2DResult.scale(1,-1);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        objectPanel = new javax.swing.JPanel();
        resultPanel = new javax.swing.JPanel();
        drawObjBtn = new javax.swing.JButton();
        rotateBtn = new javax.swing.JButton();
        rotateInput = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        rotateXInp = new javax.swing.JTextField();
        rotateYInp = new javax.swing.JTextField();
        clearBtn = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        scaleXInp = new javax.swing.JTextField();
        scaleYInp = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        scaleBtn = new javax.swing.JButton();
        xInp = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        yInp = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout objectPanelLayout = new javax.swing.GroupLayout(objectPanel);
        objectPanel.setLayout(objectPanelLayout);
        objectPanelLayout.setHorizontalGroup(
            objectPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 388, Short.MAX_VALUE)
        );
        objectPanelLayout.setVerticalGroup(
            objectPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 268, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout resultPanelLayout = new javax.swing.GroupLayout(resultPanel);
        resultPanel.setLayout(resultPanelLayout);
        resultPanelLayout.setHorizontalGroup(
            resultPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 388, Short.MAX_VALUE)
        );
        resultPanelLayout.setVerticalGroup(
            resultPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 268, Short.MAX_VALUE)
        );

        drawObjBtn.setText("Draw object");
        drawObjBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                drawObjBtnActionPerformed(evt);
            }
        });

        rotateBtn.setText("Rotate");
        rotateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rotateBtnActionPerformed(evt);
            }
        });

        jLabel1.setText("Theta");

        jLabel2.setText("Rotate X");

        jLabel3.setText("Rotate Y");

        clearBtn.setText("Clear");
        clearBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearBtnActionPerformed(evt);
            }
        });

        jLabel4.setText("Scale X");

        jLabel5.setText("Scale Y");

        scaleBtn.setText("Scale");
        scaleBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                scaleBtnActionPerformed(evt);
            }
        });

        jLabel6.setText("Point X");

        jLabel7.setText("Point Y");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(objectPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(76, 76, 76)
                .addComponent(resultPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(drawObjBtn)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(33, 33, 33)
                                .addComponent(rotateInput, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(rotateXInp)
                                    .addComponent(rotateYInp))))
                        .addGap(54, 54, 54)
                        .addComponent(clearBtn))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(169, 169, 169)
                        .addComponent(rotateBtn)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(scaleYInp))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(scaleXInp, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)))
                    .addComponent(scaleBtn))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(xInp, javax.swing.GroupLayout.DEFAULT_SIZE, 53, Short.MAX_VALUE)
                    .addComponent(yInp))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(drawObjBtn)
                                    .addComponent(jLabel1)
                                    .addComponent(rotateInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel2))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(rotateXInp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(clearBtn)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(rotateYInp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(7, 7, 7)
                        .addComponent(rotateBtn))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel4)
                                    .addComponent(scaleXInp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel5)
                                    .addComponent(scaleYInp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel7)
                                    .addComponent(yInp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel6)
                                .addComponent(xInp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addComponent(scaleBtn)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 62, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(resultPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(objectPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void drawObjBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_drawObjBtnActionPerformed
        // TODO add your handling code here:
        drawShape();
    }//GEN-LAST:event_drawObjBtnActionPerformed
    
     private void drawShape()
    {
        gObject = objectPanel.getGraphics();
        g2DObject = (Graphics2D)gObject;
        g2DObject.translate(388/2,268/2);
        g2DObject.scale(1,-1);
        gResult = resultPanel.getGraphics();
        g2DResult = (Graphics2D)gResult;
        g2DResult.translate(388/2,268/2);
        g2DResult.scale(1,-1);
        Point2D p;
        p = new Point2D.Double(-40,-40);
        outerRect.add(p);
        p = new Point2D.Double(80,-40);
        outerRect.add(p);
         p = new Point2D.Double(80,80);
        outerRect.add(p);
        p = new Point2D.Double(-40,80);
        outerRect.add(p);
        
        for(int i=0;i<outerRect.size()  ;i++)
        {
            g2DObject.drawLine((int)outerRect.get(i%4).getX(),(int)outerRect.get(i%4).getY(),(int)outerRect.get((1+i)%4).getX(),(int)outerRect.get((1+i)%4).getY());
        }
        
        p = new Point2D.Double(-20,20);
        innerRect1.add(p);
        p = new Point2D.Double(-10,20);
        innerRect1.add(p);
        p = new Point2D.Double(-10,80);
        innerRect1.add(p);
        p = new Point2D.Double(-20,80);
        innerRect1.add(p);
        
         for(int i=0;i<innerRect1.size()  ;i++)
        {
            g2DObject.drawLine((int)innerRect1.get(i%4).getX(),(int)innerRect1.get(i%4).getY(),(int)innerRect1.get((1+i)%4).getX(),(int)innerRect1.get((1+i)%4).getY());
        }
         
        p = new Point2D.Double(10,20);
        innerRect2.add(p);
        p = new Point2D.Double(20,20);
        innerRect2.add(p);
        p = new Point2D.Double(20,80);
        innerRect2.add(p);
        p = new Point2D.Double(10,80);
        innerRect2.add(p);
        
         for(int i=0;i<innerRect2.size()  ;i++)
        {
            g2DObject.drawLine((int)innerRect2.get(i%4).getX(),(int)innerRect2.get(i%4).getY(),(int)innerRect2.get((1+i)%4).getX(),(int)innerRect2.get((1+i)%4).getY());
        }
        
        p = new Point2D.Double(40,20);
        innerRect3.add(p);
        p = new Point2D.Double(50,20);
        innerRect3.add(p);
        p = new Point2D.Double(50,80);
        innerRect3.add(p);
        p = new Point2D.Double(40,80);
        innerRect3.add(p);
        
         for(int i=0;i<innerRect3.size()  ;i++)
        {
            g2DObject.drawLine((int)innerRect3.get(i%4).getX(),(int)innerRect3.get(i%4).getY(),(int)innerRect3.get((1+i)%4).getX(),(int)innerRect3.get((1+i)%4).getY());
        }
         
         
        
         
      
        objectPanel.printComponents(g2DObject);
    }
    private void rotateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rotateBtnActionPerformed
        // TODO add your handling code here:
         gObject = objectPanel.getGraphics();
        g2DObject = (Graphics2D)gObject;
        g2DObject.translate(388/2,268/2);
        g2DObject.scale(1,-1);
        gResult = resultPanel.getGraphics();
        g2DResult = (Graphics2D)gResult;
        g2DResult.translate(388/2,268/2);
        g2DResult.scale(1,-1);
        float tx = (float) (Float.parseFloat(rotateXInp.getText()));
        float ty = (float) (Float.parseFloat(rotateYInp.getText()));
        translate((0-tx),(0-ty),outerRect,innerRect1,innerRect2,innerRect3);
        float theta = (float) (Float.parseFloat(rotateInput.getText())*3.14/180);
        float ctheta = (float) Math.cos(theta);
        float stheta = (float) Math.sin(theta);
        for(int i=0;i<routerRect.size()  ;i++)
        {
            int x = (int) routerRect.get(i).getX();
            int y = (int) routerRect.get(i).getY();
            touterRect.add(new Point2D.Double((x*ctheta)-(y*stheta),(x*stheta)+(y*ctheta)));
        }
        for(int i=0;i<rinnerRect1.size()  ;i++)
        {
            int x = (int) rinnerRect1.get(i).getX();
            int y = (int) rinnerRect1.get(i).getY();
            tinnerRect1.add(new Point2D.Double((x*ctheta)-(y*stheta),(x*stheta)+(y*ctheta)));
        }
        for(int i=0;i<rinnerRect2.size()  ;i++)
        {
            int x = (int) rinnerRect2.get(i).getX();
            int y = (int) rinnerRect2.get(i).getY();
            tinnerRect2.add(new Point2D.Double((x*ctheta)-(y*stheta),(x*stheta)+(y*ctheta)));
        }
        for(int i=0;i<rinnerRect3.size()  ;i++)
        {
            int x = (int) rinnerRect3.get(i).getX();
            int y = (int) rinnerRect3.get(i).getY();
            tinnerRect3.add(new Point2D.Double((x*ctheta)-(y*stheta),(x*stheta)+(y*ctheta)));
        }
      
        translate((0+tx),(0+ty),touterRect,tinnerRect1,tinnerRect2,tinnerRect3);
        
        for(int i=0;i<4;i++)
        {
            g2DResult.drawLine((int)routerRect.get(i%4).getX(),(int)routerRect.get(i%4).getY(),(int)routerRect.get((1+i)%4).getX(),(int)routerRect.get((1+i)%4).getY());
            g2DResult.drawLine((int)rinnerRect1.get(i%4).getX(),(int)rinnerRect1.get(i%4).getY(),(int)rinnerRect1.get((1+i)%4).getX(),(int)rinnerRect1.get((1+i)%4).getY());
            g2DResult.drawLine((int)rinnerRect2.get(i%4).getX(),(int)rinnerRect2.get(i%4).getY(),(int)rinnerRect2.get((1+i)%4).getX(),(int)rinnerRect2.get((1+i)%4).getY());
            g2DResult.drawLine((int)rinnerRect3.get(i%4).getX(),(int)rinnerRect3.get(i%4).getY(),(int)rinnerRect3.get((1+i)%4).getX(),(int)rinnerRect3.get((1+i)%4).getY());
        } 
        resultPanel.printComponents(g2DResult);
    }//GEN-LAST:event_rotateBtnActionPerformed

    private void clearBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearBtnActionPerformed
        // TODO add your handling code here:
        touterRect.clear();
        tinnerRect1.clear();
        tinnerRect2.clear();
        tinnerRect3.clear();
        tsmallRect1.clear();
        tsmallRect2.clear();
        tsmallRect3.clear();
         routerRect.clear();
        rinnerRect1.clear();
        rinnerRect2.clear();
        rinnerRect3.clear();
        objectPanel.removeAll();
        objectPanel.updateUI();
        resultPanel.removeAll();
        resultPanel.updateUI();
    }//GEN-LAST:event_clearBtnActionPerformed

    private void scaleBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_scaleBtnActionPerformed
        // TODO add your handling code here:
        float sx = Float.parseFloat(scaleXInp.getText());
        float sy = Float.parseFloat(scaleYInp.getText());
         gObject = objectPanel.getGraphics();
        g2DObject = (Graphics2D)gObject;
        g2DObject.translate(388/2,268/2);
        g2DObject.scale(1,-1);
        gResult = resultPanel.getGraphics();
        g2DResult = (Graphics2D)gResult;
        g2DResult.translate(388/2,268/2);
        g2DResult.scale(1,-1);
        float tx = (float) (Float.parseFloat(xInp.getText()));
        float ty = (float) (Float.parseFloat(yInp.getText()));
        translate((0-tx),(0-ty),outerRect,innerRect1,innerRect2,innerRect3);
        for(int i=0;i<routerRect.size()  ;i++)
        {
            int x = (int) routerRect.get(i).getX();
            int y = (int) routerRect.get(i).getY();
            touterRect.add(new Point2D.Double((x * sx),(y * sy)));
        }
        for(int i=0;i<rinnerRect1.size()  ;i++)
        {
            int x = (int) rinnerRect1.get(i).getX();
            int y = (int) rinnerRect1.get(i).getY();
            tinnerRect1.add(new Point2D.Double((x * sx),(y * sy)));
        }
        for(int i=0;i<rinnerRect2.size()  ;i++)
        {
            int x = (int) rinnerRect2.get(i).getX();
            int y = (int) rinnerRect2.get(i).getY();
            tinnerRect2.add(new Point2D.Double((x * sx),(y * sy)));
        }
        for(int i=0;i<rinnerRect3.size()  ;i++)
        {
            int x = (int) rinnerRect3.get(i).getX();
            int y = (int) rinnerRect3.get(i).getY();
            tinnerRect3.add(new Point2D.Double((x * sx),(y * sy)));
        }
     
        translate((0+tx),(0+ty),touterRect,tinnerRect1,tinnerRect2,tinnerRect3);
        
        for(int i=0;i<4;i++)
        {
            g2DResult.drawLine((int)routerRect.get(i%4).getX(),(int)routerRect.get(i%4).getY(),(int)routerRect.get((1+i)%4).getX(),(int)routerRect.get((1+i)%4).getY());
            g2DResult.drawLine((int)rinnerRect1.get(i%4).getX(),(int)rinnerRect1.get(i%4).getY(),(int)rinnerRect1.get((1+i)%4).getX(),(int)rinnerRect1.get((1+i)%4).getY());
            g2DResult.drawLine((int)rinnerRect2.get(i%4).getX(),(int)rinnerRect2.get(i%4).getY(),(int)rinnerRect2.get((1+i)%4).getX(),(int)rinnerRect2.get((1+i)%4).getY());
            g2DResult.drawLine((int)rinnerRect3.get(i%4).getX(),(int)rinnerRect3.get(i%4).getY(),(int)rinnerRect3.get((1+i)%4).getX(),(int)rinnerRect3.get((1+i)%4).getY());
        } 
        resultPanel.printComponents(g2DResult);
    }//GEN-LAST:event_scaleBtnActionPerformed

    private void translate(float tx,float ty,List<Point2D> outerRect,List<Point2D> innerRect1,List<Point2D> innerRect2,List<Point2D> innerRect3)
    {
        routerRect.clear();
        rinnerRect1.clear();
        rinnerRect2.clear();
        rinnerRect3.clear();
        for(int i=0;i<outerRect.size()  ;i++)
        {
            int x = (int) outerRect.get(i).getX();
            int y = (int) outerRect.get(i).getY();
            routerRect.add(new Point2D.Double((x + tx),(y + ty)));
        }
        for(int i=0;i<innerRect1.size()  ;i++)
        {
            int x = (int) innerRect1.get(i).getX();
            int y = (int) innerRect1.get(i).getY();
            rinnerRect1.add(new Point2D.Double((x + tx),(y + ty)));
        }
        for(int i=0;i<innerRect2.size()  ;i++)
        {
            int x = (int) innerRect2.get(i).getX();
            int y = (int) innerRect2.get(i).getY();
            rinnerRect2.add(new Point2D.Double((x + tx),(y + ty)));
        }
        for(int i=0;i<innerRect3.size()  ;i++)
        {
            int x = (int) innerRect3.get(i).getX();
            int y = (int) innerRect3.get(i).getY();
            rinnerRect3.add(new Point2D.Double((x + tx),(y + ty)));
        }
       
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Composite_Transformation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Composite_Transformation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Composite_Transformation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Composite_Transformation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Composite_Transformation().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton clearBtn;
    private javax.swing.JButton drawObjBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel objectPanel;
    private javax.swing.JPanel resultPanel;
    private javax.swing.JButton rotateBtn;
    private javax.swing.JTextField rotateInput;
    private javax.swing.JTextField rotateXInp;
    private javax.swing.JTextField rotateYInp;
    private javax.swing.JButton scaleBtn;
    private javax.swing.JTextField scaleXInp;
    private javax.swing.JTextField scaleYInp;
    private javax.swing.JTextField xInp;
    private javax.swing.JTextField yInp;
    // End of variables declaration//GEN-END:variables
}
