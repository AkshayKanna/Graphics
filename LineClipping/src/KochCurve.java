 
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.geom.AffineTransform;
import java.awt.geom.Line2D;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Siva
 */
public class KochCurve extends javax.swing.JFrame {

    /**
     * Creates new form KochCurve
     */
     Graphics g;
    Graphics2D g2;
    public KochCurve() {
        initComponents();
        g = resultPanel.getGraphics();
        g2 = (Graphics2D) g;
        g.translate(0,150);
        g2.scale(1,-1);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        resultPanel = new javax.swing.JPanel();
        drawCurve = new javax.swing.JButton();
        clearBtn = new javax.swing.JButton();
        depthInp = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout resultPanelLayout = new javax.swing.GroupLayout(resultPanel);
        resultPanel.setLayout(resultPanelLayout);
        resultPanelLayout.setHorizontalGroup(
            resultPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 275, Short.MAX_VALUE)
        );
        resultPanelLayout.setVerticalGroup(
            resultPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 196, Short.MAX_VALUE)
        );

        drawCurve.setText("Draw Curve");
        drawCurve.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                drawCurveActionPerformed(evt);
            }
        });

        clearBtn.setText("Clear");
        clearBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearBtnActionPerformed(evt);
            }
        });

        jLabel1.setText("Depth");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addComponent(resultPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(91, 91, 91)
                        .addComponent(drawCurve)
                        .addGap(27, 27, 27)
                        .addComponent(clearBtn))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(depthInp, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(131, 131, 131)))
                .addContainerGap(78, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(depthInp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(drawCurve)
                    .addComponent(clearBtn))
                .addGap(18, 18, 18)
                .addComponent(resultPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void clearBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearBtnActionPerformed
        // TODO add your handling code here:
        resultPanel.removeAll();
        resultPanel.updateUI();
    }//GEN-LAST:event_clearBtnActionPerformed

    private void drawCurveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_drawCurveActionPerformed
        // TODO add your handling code here:
       /* g2.drawLine(0, 0 , 30, 0);
        resultPanel.printComponents(g2);
        float o = (float) (60 * 3.14/180);
        float x1 = (float) (((30-30) * Math.cos(o)) - (0 * Math.sin(o)))+30;
        float y1 = (float) (((30-30) * Math.sin(o)) + (0 * Math.cos(o)))+0;
        float x2 = (float) (((60-30) * Math.cos(o)) - (0 * Math.sin(o))) +30 ;
        float y2 = (float) (((60-30) * Math.sin(o)) + (0 * Math.cos(o))) + 0 ;
        //System.out.println(x2 + " " +y2);
        g2.drawLine((int)x1,(int)y1,(int)x2,(int)y2);
        o = (float) (120 * 3.14/180);
        x1 = (float) (((60-60) * Math.cos(o)) - (0 * Math.sin(o)))+60;
        y1 = (float) (((60-60) * Math.sin(o)) + (0 * Math.cos(o)))+0;
        x2 = (float) (((90-60) * Math.cos(o)) - (0 * Math.sin(o))) +60 ;
        y2 = (float) (((90-60) * Math.sin(o)) + (0 * Math.cos(o))) + 0 ;
        System.out.println(x1 + " " +y1 +" " + x2 + " " +y2);
        g2.drawLine((int)x1,(int)y1,(int)x2,(int)y2);
        o = (float) (0 * 3.14/180);
        x1 = (float) (((60-60) * Math.cos(o)) - (0 * Math.sin(o)))+60;
        y1 = (float) (((60-60) * Math.sin(o)) + (0 * Math.cos(o)))+0;
        x2 = (float) (((90-60) * Math.cos(o)) - (0 * Math.sin(o))) +60 ;
        y2 = (float) (((90-60) * Math.sin(o)) + (0 * Math.cos(o))) + 0 ;
        System.out.println(x1 + " " +y1 +" " + x2 + " " +y2);
        g2.drawLine((int)x1,(int)y1,(int)x2,(int)y2);
        
        resultPanel.printComponents(g2);*/
       drawCurve(Integer.parseInt(depthInp.getText()),20,20,120,20);
    }//GEN-LAST:event_drawCurveActionPerformed

    private void drawCurve(int depth, int x1,int y1,int x2,int y2)
    {
        if(depth == 0)
        {
            g2.drawLine(x1,y1,x2,y2);
            resultPanel.printComponents(g2);
        }
        else
        {
            float delx = x2 - x1;
            float dely = y2 - y1;

            float xt1 = x1 + delx/3;
            float yt1 = y1 + dely/3;
           // System.out.println(x1 + " " +y1 +" " + xt1 + " " +yt1);
            float xt2 = (float) (((x1+x2)/2) - (Math.sqrt(3.0)/6)*(y2-y1));
            float yt2 = (float) (((y1+y2)/2) + (Math.sqrt(3.0)/6)*(x2-x1));

            //System.out.println(xt2 + " " +yt2 );
            float xt3 = x2 - delx/3;
            float yt3 = y2 - dely/3;
            //System.out.println(xt3 + " " +yt3 );
            drawCurve(depth-1,(int)x1,(int)y1,(int)xt1,(int)yt1);
            drawCurve(depth-1,(int)xt1,(int)yt1,(int)xt2,(int)yt2);
            drawCurve(depth-1,(int)xt2,(int)yt2,(int)xt3,(int)yt3);
            drawCurve(depth-1,(int)xt3,(int)yt3,(int)x2,(int)y2);
        }
            
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(KochCurve.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(KochCurve.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(KochCurve.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(KochCurve.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new KochCurve().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton clearBtn;
    private javax.swing.JTextField depthInp;
    private javax.swing.JButton drawCurve;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel resultPanel;
    // End of variables declaration//GEN-END:variables
}
