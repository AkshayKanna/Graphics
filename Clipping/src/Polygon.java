
import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Point;
import java.util.ArrayList;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author admin
 * Sutherland Hodgeman Algorithm
 */
public class Polygon extends javax.swing.JFrame {

    /**
     * Creates new form Polygon
     */
    private int xmin;
    private int xmax;
    private int ymin;
    private int ymax;
    private ArrayList<Point> vertex;
    private ArrayList<Point> vertex1;
    Graphics g;
    Graphics2D g2;
    public Polygon() {
        initComponents();
        vertex = new ArrayList<>();
        vertex1 = new ArrayList<>();
        g = jPanel1.getGraphics();
        g2 = (Graphics2D) g;
        g.translate(0,202);
        g2.scale(1,-1);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Xmin");

        jLabel2.setText("Ymin");

        jLabel3.setText("Xmax");

        jLabel4.setText("Ymax");

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jButton1.setText("Draw");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Clip");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Reset");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 708, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 202, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(69, 69, 69)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextField1, javax.swing.GroupLayout.DEFAULT_SIZE, 84, Short.MAX_VALUE)
                    .addComponent(jTextField3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(106, 106, 106)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(110, 110, 110))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(136, 136, 136)
                        .addComponent(jButton1)
                        .addGap(101, 101, 101)
                        .addComponent(jButton2)
                        .addGap(101, 101, 101)
                        .addComponent(jButton3))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(19, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(60, 60, 60)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(64, 64, 64)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton3)
                        .addComponent(jButton2)))
                .addGap(26, 26, 26)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        // TODO add your handling code here:
        // Draw the Shapes
         xmin = Integer.parseInt(jTextField1.getText());
        xmax = Integer.parseInt(jTextField3.getText());
        ymin = Integer.parseInt(jTextField2.getText());
        ymax = Integer.parseInt(jTextField4.getText());
        g2.setPaint(Color.BLACK);
        System.out.println("BUtton 1");
        int [] xarr = {20,100,100,20,20};
        int [] yarr = {30,30,90,90,30};
      
        for(int i=0;i<5;i++)
        {
            Point p = new Point(xarr[i],yarr[i]);
            vertex.add(p);
        }
        int i;
        for (i = 0; i < vertex.size()-1 ; i++) {
                g2.drawLine(vertex.get(i).x, vertex.get(i).y, vertex.get(i+1).x,vertex.get(i+1).y);
        }
        jPanel1.printComponents(g2);
        polygonClip();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        //RESET Button
        vertex1.clear();
        vertex.clear();
        jPanel1.removeAll();
        jPanel1.updateUI();
    }//GEN-LAST:event_jButton3ActionPerformed

       
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        System.out.println("BUtton 2");
        g2.setPaint(Color.BLUE);
        g2.drawLine(xmin, ymin, xmax, ymin);
        g2.drawLine(xmax, ymin, xmax, ymax);
        g2.drawLine(xmax, ymax, xmin, ymax);
        g2.drawLine(xmin, ymax, xmin, ymin);
        g2.setPaint(Color.RED);
        int i;
        for (i = 0; i < vertex.size()-1; i++) 
        {
            g2.drawLine(vertex.get(i).x, vertex.get(i).y, vertex.get(i+1).x,vertex.get(i+1).y);
        }
        g2.drawLine(vertex.get(i).x, vertex.get(i).y, vertex.get(0).x,vertex.get(0).y);
       
        jPanel1.printComponents(g2);
    }//GEN-LAST:event_jButton2ActionPerformed

    public void polygonClip()
    {
        clipLeft();
        int a = 0;
        Point h;
        while(a < vertex1.size())
        {
            h = vertex1.get(a);
            a++;
        }
        if(!vertex1.isEmpty())
        {
            vertex.clear();
            vertex.addAll(vertex1);
            vertex1.clear();
            clipRight();
        }
        if(!vertex1.isEmpty())
        {
            a =0 ;
            while(a < vertex1.size())
            {
                h = vertex1.get(a);
                a++;
            }
            vertex.clear();
            vertex.addAll(vertex1);
            vertex1.clear();
            clipBottom();
        }
        if(!vertex1.isEmpty())
        {
            a =0 ;
            while(a < vertex1.size())
            {
                h = vertex1.get(a);
                a++;
            }
            vertex.clear();
            vertex.addAll(vertex1);
            vertex1.clear();
            clipTop();}
            a =0 ;
            while(a < vertex1.size())
            {
                h = vertex1.get(a);
                a++;
            }
            vertex.clear();
            vertex.addAll(vertex1);
    }
    public void clipLeft()
    {
        int x,y,x1,x2,y1,y2;
        Point p;
        for (int i = 0; i < vertex.size()-1; i++) 
        {
            x1 = vertex.get(i).x;
            x2 = vertex.get(i+1).x;
            y1 = vertex.get(i).y;
            y2 = vertex.get(i+1).y;
                
            if(x1 < xmin && x2 >= xmin)
            {
                x  = xmin;
                y = y1 + (x-x1)*(y2-y1)/(x2-x1);
                p = new Point(x,y);
                vertex1.add(p);
                vertex1.add(vertex.get(i+1));
            }
            else if(x1 >= xmin && x2 >= xmin) 
            {
                vertex1.add(vertex.get(i+1));
            }
            else if(x1 >= xmin && x2 < xmin) 
            {
                x  = xmin;
                y = y2 + (x-x2)*(y2-y1)/(x2-x1);
                p = new Point(x,y);
                vertex1.add(p);
            }
            
        }
        vertex1.add(vertex1.get(0));
    }
    public void clipRight()
    {
        int x,y,x1,x2,y1,y2;
        Point p;
        for (int i = 0; i < vertex.size()-1; i++)
        {
            x1 = vertex.get(i).x;
            x2 = vertex.get(i+1).x;
            y1 = vertex.get(i).y;
            y2 = vertex.get(i+1).y;
            if(x1 > xmax && x2 <= xmax) 
            {
                x  = xmax;
                y = y1 + (x-x1)*(y2-y1)/(x2-x1);
                p = new Point(x,y);
                vertex1.add(p);
                vertex1.add(vertex.get(i+1));
            }
            else if(x1 <= xmax && x2 <= xmax) 
            {
                vertex1.add(vertex.get(i+1));
            }
            else if(x1 <= xmax && x2 > xmax)
            {
                x  = xmax;
                y = y2 + (x-x2)*(y2-y1)/(x2-x1);
                p = new Point(x,y);
                vertex1.add(p);
            }
        }
        vertex1.add(vertex1.get(0));
    }
    public void clipTop()
    {
        int x,y,x1,x2,y1,y2;
        Point p;
        for (int i = 0; i < vertex.size()-1; i++) 
        {
            x1 = vertex.get(i).x;
            x2 = vertex.get(i+1).x;
            y1 = vertex.get(i).y;
            y2 = vertex.get(i+1).y;
            if(y1 < ymin && y2 >= ymin) 
            {
                y  = ymin;
                x = x2 + (y-y2)*(x2-x1)/(y2-y1);
                p = new Point(x,y);
                vertex1.add(p);
                vertex1.add(vertex.get(i+1));
            }
            else if(y1 >= ymin && y2 >= ymin) 
            {
                vertex1.add(vertex.get(i+1));
            }
            else if(y1 >= ymin && y2 < ymin) 
            {
                y  = ymin;
                x = x2 + (y-y2)*(x2-x1)/(y2-y1);
                p = new Point(x,y);
                vertex1.add(p);
            }    
        }
       vertex1.add(vertex1.get(0));
    }
    public void clipBottom()
    {
        int x,y,x1,x2,y1,y2;
        Point p;
        for (int i = 0; i < vertex.size()-1; i++) 
        {
            x1 = vertex.get(i).x;
            x2 = vertex.get(i+1).x;
            y1 = vertex.get(i).y;
            y2 = vertex.get(i+1).y;
            if(y1 > ymax && y2 <= ymax) 
            {
                y  = ymax;
                x = x2 + (y-y2)*(x2-x1)/(y2-y1);
                p = new Point(x,y);
                vertex1.add(p);
                vertex1.add(vertex.get(i+1));
            }
            else if(y1 <= ymax && y2 <= ymax) 
            {
                vertex1.add(vertex.get(i+1));
            }
            else if(y1 <= ymax && y2 > ymax) 
            {
                y  = ymax;
                x = x2 + (y-y2)*(x2-x1)/(y2-y1);
                p = new Point(x,y);
                vertex1.add(p);
            }
        }
        vertex1.add(vertex1.get(0));
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Polygon.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Polygon.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Polygon.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Polygon.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Polygon().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    // End of variables declaration//GEN-END:variables
}
